version: "3.8"
services:
  larp-ui:
    container_name: larp-ui
    build: larp-online-ui
    image: larp-ui:latest
    restart: unless-stopped
    volumes:
      - ./larp-online-ui:/opt/app
      # exclude node modules and next files
      - /opt/app/node_modules
      - /opt/app/.next
    ports:
      - "3000:3000"
    networks:
      - larp
    depends_on:
      - larp-backend

  larp-backend:
    container_name: larp-strapi
    build: larp-online-backend
    image: larp-strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: larp-db
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./larp-online-backend/config:/opt/app/config
      - ./larp-online-backend/src:/opt/app/src
      - ./larp-online-backend/package.json:/opt/package.json
      - ./larp-online-backend/yarn.lock:/opt/yarn.lock 
      - ./larp-online-backend/.env:/opt/app/.env
      - ./larp-online-backend/public:/opt/app/public
    ports:
      - "1337:1337"
    networks:
      - larp
    depends_on:
      - larp-db

  larp-db:
    image: postgres:14.1-alpine
    container_name: larp-db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - larp-db:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - larp

volumes:
  larp-db:
    driver: local

networks:
  larp:
    name: Larp
    driver: bridge
